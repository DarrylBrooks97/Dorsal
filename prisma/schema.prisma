generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  tanks         Tank[]
  fish          Fish[]
  plants        Plant[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Fish {
  id           String  @id @default(cuid())
  user_id      String? @default(cuid())
  user         User?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  tankId       String? @default(cuid())
  tank         Tank?   @relation(fields: [tankId], references: [id], onDelete: Cascade)
  name         String  @db.VarChar(255)
  image_url    String  @db.VarChar(255)
  habitat      String  @db.VarChar(255)
  species      String  @db.VarChar(255)
  tank_sizes   String  @db.VarChar(255)
  diet         String  @db.VarChar(255)
  water_params Json
  tank_friends Json
  illnesses    String  @db.VarChar(255)

  @@index([tankId])
}

model Plant {
  id           String  @id @default(cuid())
  user_id      String? @default(cuid())
  user         User?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  tankId       String? @default(cuid())
  tank         Tank?   @relation(fields: [tankId], references: [id], onDelete: Cascade)
  name         String  @db.VarChar(255)
  image_url    String  @db.VarChar(255)
  species      String  @db.VarChar(255)
  lighting     String  @db.VarChar(255)
  soil         String  @db.VarChar(255)
  water_params Json
  illnesses    String  @db.VarChar(255)

  @@index([tankId])
}

model Tank {
  id         String   @id @default(cuid())
  user_id    String?  @default(cuid())
  user       User?    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  type       String   @db.VarChar(255)
  name       String   @db.VarChar(255)
  pH         Decimal  @db.Decimal(10, 0)
  nirate     Decimal  @db.Decimal(10, 0)
  hardness   Decimal  @db.Decimal(10, 0)
  created_at DateTime @db.Timestamp(0)
  updated_at DateTime @db.Timestamp(0)
  Fish       Fish[]
  Plant      Plant[]
}
